@model List<WebUI.Controllers.SystemAccountViewModel>
@{
    ViewData["Title"] = "System Accounts";
    var orderbyValue = Context.Request.Query["orderby"].ToString();
    var topValue = Context.Request.Query["top"].ToString();
    var pageValue = Context.Request.Query["page"].ToString();
    int page = 1;
    int.TryParse(pageValue, out page);
    if (page < 1) page = 1;
    int pageSize = 10;
    int.TryParse(topValue, out pageSize);
    if (pageSize < 1) pageSize = 10;
}

<h2 class="text-center mb-4">System Accounts</h2>
<div class="container">
    @if (TempData["DeleteError"] != null)
    {
        <div class="alert alert-danger">@TempData["DeleteError"]</div>
    }
    <div class="row mb-3">
        <div class="col-md-6">
            <form asp-action="Index" method="get" class="row g-2">
                <div class="col-auto">
                    <select name="orderby" class="form-select">
                        <option value="">Sort by</option>
                        @if(orderbyValue=="AccountName") {
                            <option value="AccountName" selected>Name</option>
                        } else {
                            <option value="AccountName">Name</option>
                        }
                        @if(orderbyValue=="AccountId") {
                            <option value="AccountId" selected>ID</option>
                        } else {
                            <option value="AccountId">ID</option>
                        }
                    </select>
                </div>
                <div class="col-auto">
                    <select name="top" class="form-select">
                        @if(pageSize==10) {
                            <option value="10" selected>10 / page</option>
                        } else {
                            <option value="10">10 / page</option>
                        }
                        @if(pageSize==20) {
                            <option value="20" selected>20 / page</option>
                        } else {
                            <option value="20">20 / page</option>
                        }
                        @if(pageSize==50) {
                            <option value="50" selected>50 / page</option>
                        } else {
                            <option value="50">50 / page</option>
                        }
                        @if(pageSize==100) {
                            <option value="100" selected>100 / page</option>
                        } else {
                            <option value="100">100 / page</option>
                        }
                    </select>
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary">Apply</button>
                </div>
            </form>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="Create" class="btn btn-success">Create New Account</a>
        </div>
    </div>
    <div class="d-flex justify-content-end mb-2">
        <form asp-action="Index" method="get" class="d-inline">
            <input type="hidden" name="orderby" value="@orderbyValue" />
            <input type="hidden" name="top" value="@pageSize" />
            <button type="submit" name="page" value="@(page-1)" class="btn btn-outline-secondary btn-sm me-1" @(page<=1?"disabled":null)>Previous</button>
            <span class="align-middle">Page @(page)</span>
            <button type="submit" name="page" value="@(page+1)" class="btn btn-outline-secondary btn-sm ms-1" @(Model.Count < pageSize ? "disabled" : null)>Next</button>
        </form>
    </div>
    <table class="table table-striped table-bordered shadow-sm">
        <thead class="table-primary">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.AccountId</td>
                <td>@item.AccountName</td>
                <td>@item.AccountEmail</td>
                <td>@item.AccountRole</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.AccountId" class="btn btn-warning btn-sm me-1">Edit</a>
                    @if (Context.Session.GetString("UserRole") == "Admin")
                    {
                        <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal-@item.AccountId">Delete</button>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<!-- Delete Modal -->
@foreach (var item in Model)
{
    if (Context.Session.GetString("UserRole") == "Admin")
    {
        <div class="modal fade" id="deleteModal-@item.AccountId" tabindex="-1" aria-labelledby="deleteModalLabel-@item.AccountId" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel-@item.AccountId">Delete Account</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete <strong>@item.AccountName</strong>?
                    </div>
                    <div class="modal-footer">
                        <form asp-action="Delete" asp-route-id="@item.AccountId" method="post">
                            @Html.AntiForgeryToken()
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
}
